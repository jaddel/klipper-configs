[include shell_command.cfg]
[include mainsail.cfg]
[include my_macros/*.cfg]
#[include my_macros/my_calibrate.cfg]
#[include cryd_configs/*.cfg]
[include adxl/adxl_solo.cfg]

[virtual_sdcard]
path: /home/max/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[mcu rpi]
serial: /tmp/klipper_host_mcu

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_2A0031000A47393432353533-if00
restart_method: command

###### cryd

[respond]   #activate messages

[force_move]
enable_force_move: True

[gcode_arcs]  #activate round corner
resolution: 0.1

########


# Sensors

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor raspberry]
sensor_type: temperature_host
min_temp: 0
max_temp: 100

# Printer Config
[printer]
kinematics: cartesian
# Prusa firmware defaults.
max_velocity: 400
max_accel: 20000
max_z_velocity: 25
max_z_accel: 400
max_accel_to_decel: 20000
square_corner_velocity: 5


[pause_resume]
recover_velocity: 50

[input_shaper]
shaper_type_x = zv
shaper_freq_x = 63.6
shaper_type_y = mzv
shaper_freq_y = 48.2

[stepper_x]
step_pin: PD1
dir_pin: PD0
enable_pin: !PD3
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 180.4
position_min: -2
position_max: 180.4
homing_speed: 50
homing_retract_dist: 0

[stepper_y]
step_pin: PD13
dir_pin: PD12
enable_pin: !PD14
microsteps: 16
rotation_distance: 32  # 200 * 16 / 100
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: -3
position_min: -3
position_max: 180
homing_speed: 50
homing_retract_dist: 0

[stepper_z]
step_pin: PD4
dir_pin: !PD15
enable_pin: !PD2
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: -3
position_max: 185

[extruder]
step_pin: PD9
dir_pin: !PD8
enable_pin: !PD10
microsteps: 16
rotation_distance: 20.6522 #26.2564  # (200 * 16 * 48/18) / 325
gear_ratio: 48:18
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PB1
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC0
min_temp: 85
control: pid
pid_kp: 20.885
pid_ki: 1.047
pid_kd: 104.162
min_extrude_temp: 80
min_temp: 10
max_temp: 280
pressure_advance: 0.33
max_extrude_only_distance: 400

[tmc2209 stepper_x]
uart_pin: PD5
uart_address: 1
diag_pin: ^PE2
driver_SGTHRS: 130
run_current: 0.55 #0.35
sense_resistor: 0.22
stealthchop_threshold: 0

[tmc2209 stepper_y]
uart_pin: PD5
uart_address: 3
diag_pin: ^PE1
driver_SGTHRS: 130
run_current: 0.55 # 0.35
sense_resistor: 0.22
stealthchop_threshold: 0

[tmc2209 stepper_z]
uart_pin: PD5
uart_address: 0
diag_pin: ^PE3
driver_SGTHRS: 100
run_current: 0.45 # 0.35
sense_resistor: 0.22
stealthchop_threshold: 0

[tmc2209 extruder]
uart_pin: PD5
uart_address: 2
diag_pin: ^PA15
driver_SGTHRS: 100
run_current: 0.4
sense_resistor: 0.22

[heater_bed]
heater_pin: PB0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA4
control: pid
# Prusa's firmware defaults.
pid_Kp: 120
pid_Ki: 1.5
pid_Kd: 600
min_temp: 10
max_temp: 110

# Hotend fan.
# The stock firmware uses control ranges of PWM 0-50%, RPM 1000-8000.
# Change fan_speed below to match your preference. Measured speeds:
#   fan_speed 0.5:  50% PWM = 4000RPM (Prusa stock default speed)
#   fan_speed 1.0: 100% PWM = 8000RPM (safe but loud)
[heater_fan hotend_fan]
pin: PE9
tachometer_pin: PE14
fan_speed: 0.5

# Part cooling fan.
# The stock firmware uses control ranges of PWM 10-50%, RPM 500-5000.
# To match stock firmware, set the Klipper fan speed to 50%. This speed
# can be safely increased to 100% for better part cooling. Measured speeds:
#    50% PWM = 2500RPM (Prusa stock default speed)
#   100% PWM = 5000RPM (better cooling, still quiet)
[fan]
pin: PE11
tachometer_pin: PE10

# The SuperPINDA has built-in temperature compensation and no thermistor output,
# so no compensation table is needed here.
[probe]
pin: PA8
x_offset: -29
y_offset: -3
z_offset: 1.14  # set this to your Live Z Offset, but negated (invert the sign)
speed: 100
samples:2
samples_result: median
sample_retract_dist: 1
samples_tolerance: 0.03
samples_tolerance_retries: 10

[safe_z_home]
home_xy_position: 147.4,21.1
z_hop: 4

[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 141,167
probe_count: 4,4
algorithm: bicubic


[filament_switch_sensor filament_sensor]
switch_pin: ^PB4
pause_on_runout: True
runout_gcode:
  {action_respond_info("RUNOUT Motion Sensor: Filament runout")}
  M600
insert_gcode:
  {action_respond_info("RUNOUT Motion Sensor: Filament inserted")}
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
event_delay: 3.0
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
pause_delay: 0.5
##    XYE mcu E0DET

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.083125, -0.146875, -0.082500, -0.030000
#*# 	  0.165625, 0.195625, 0.121875, 0.142500
#*# 	  0.225000, 0.320625, 0.233750, 0.221875
#*# 	  0.330625, 0.281250, 0.293750, 0.249375
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 140.98
#*# min_y = 10.0
#*# max_y = 166.99
#*#

